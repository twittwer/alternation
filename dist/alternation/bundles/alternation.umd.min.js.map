{"version":3,"sources":["ng://alternation/lib/alternation.service.ts","ng://alternation/lib/alternation.trigger.ts","ng://alternation/lib/alternation.component.ts","ng://alternation/lib/alternation.module.ts"],"names":["Alternation","dispatcher","zone","this","BehaviorSubject","value","params","next","time","prototype","position","done","_this","running","_next","run","alternation","start","init","el","options","delay","scrolled","subscribe","scrollable","$scrollable","getElementRef","nativeElement","componentRect","getBoundingClientRect","difference","Math","round","height","scrollTop","abs","position_1","Injectable","args","providedIn","ScrollDispatcher","NgZone","alternationTrigger","trigger","transition","animate","style","transform","AlternationComponent","alter","renderer","dom","Object","defineProperty","src","bypassSecurityTrustStyle","ev","setStyle","element","toState","ngOnInit","Component","selector","animations","styles","template","Renderer2","DomSanitizer","ElementRef","Input","AlternationModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { ScrollDispatcher, CdkScrollable } from '@angular/cdk/scrolling';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Alternation {\n  constructor(private dispatcher: ScrollDispatcher, private zone: NgZone) { }\n  alternation: BehaviorSubject<any> = new BehaviorSubject({ value: 0, params: { next: 0, time: 0 } });\n  running: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  speed: BehaviorSubject<number> = new BehaviorSubject(3);\n  private _next = null;\n\n  position(value, time) {\n    return { value, params: { next: value || 0, time } };\n  }\n\n  done() {\n    this.running.next(false);\n\n    if (this._next) {\n      this.zone.run(() => {\n        this.alternation.next(this._next);\n        this._next = null;\n      });\n    }\n  }\n\n  start() {\n    this.running.next(true);\n  }\n\n  init(el, options: { delay?: number } = { delay: null }) {\n    this.dispatcher.scrolled(options.delay).subscribe((scrollable: CdkScrollable) => {\n      if (scrollable) {\n        const $scrollable: HTMLElement = scrollable.getElementRef().nativeElement;\n        const componentRect = el.nativeElement.getBoundingClientRect();\n        const difference = Math.round(componentRect.height - componentRect.height * 2);\n        let next = -Math.round($scrollable.scrollTop / 3);\n        const time = Math.abs(this.alternation.value.value - next) * 5;\n\n        if (next < difference) {\n          next = difference;\n        }\n\n        const position = this.position(next, time);\n\n        if (this.running.value) {\n          this._next = position;\n          return;\n        }\n\n        if (next) {\n          this.zone.run(() => {\n            this.alternation.next(position);\n          });\n        }\n      }\n    });\n\n    return this.alternation;\n  }\n}\n","import { trigger, style, transition, animate, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const alternationTrigger: AnimationTriggerMetadata = trigger('alternation', [\n  transition('* => *', [\n    animate(\n      '{{ time }}ms cubic-bezier(0.0, 0.0, 0.2, 1)',\n      style({ transform: 'translateY({{ next }}px)' })\n    ),\n  ]),\n]);\n","import { Component, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { Alternation } from './alternation.service';\nimport { alternationTrigger } from './alternation.trigger';\n\n@Component({\n  selector: 'alternation',\n  animations: [alternationTrigger],\n  styles: [`:host{position:relative;overflow:hidden;display:block;height:100%;width:100%}div.image{background-repeat:no-repeat;background-position:center;background-size:cover;will-change:transform;display:block;height:200%;width:100%}div.content{position:absolute;top:0;width:100%;height:100%}`],\n  template: `\n    <div\n      class=\"image\"\n      [style.backgroundImage]=\"safeSrc\"\n      [@.disabled]=\"disabled\"\n      (@alternation.done)=\"done($event)\"\n      (@alternation.start)=\"start($event)\"\n      [@alternation]=\"alternation | async\"\n    ></div>\n    <div class=\"content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class AlternationComponent implements OnInit {\n  constructor(\n    public alter: Alternation,\n    private renderer: Renderer2,\n    private dom: DomSanitizer,\n    private el: ElementRef\n  ) {}\n  @Input() disabled: boolean = false;\n  @Input() delay: number;\n  @Input() src: string;\n  alternation;\n\n  get safeSrc(): SafeStyle {\n    return this.src\n      ? this.dom.bypassSecurityTrustStyle(`url(${this.src})`)\n      : '';\n  }\n\n  start(ev): void {\n    this.alter.start();\n  }\n\n  done(ev): void {\n    this.renderer.setStyle(\n      ev.element,\n      'transform',\n      `translateY(${ev.toState}px)`\n    );\n    this.alter.done();\n  }\n\n  ngOnInit() {\n    this.alternation = this.alter.init(this.el, { delay: this.delay });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AlternationComponent } from './alternation.component'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AlternationComponent],\n  exports: [AlternationComponent]\n})\nexport class AlternationModule { }\n"]}